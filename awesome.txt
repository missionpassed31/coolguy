1.Aim:
     To write a python program to implement stack operations using list.
Program code:
     def isEmpty(stk):
    if stk==[]:
        return True
    else:
        return False
def Push(stk, item):
    stk.append(item)
    top=len(stk)-1
def Pop(stk):
    if isEmpty(stk):
        return "Underflow"
    else:
        item=stk.pop()
        if len(stk)==0:
            top=None
        else:
            top=len(stk)-1
        return item
def Peek(stk):
    if isEmpty(stk):
        return "Underflow"
    else:
        top=len(stk)-1
        return stk[top]
def Display(stk):
    if isEmpty(stk):
        print("Stack is empty")
    else:
        top = len(stk) - 1
        print('\n'+str(stk[top])+" <-- top")
        for a in range(top-1,-1,-1):
            print(stk[a])
#__Main__
            
Stack=[]    #initially stack is empty
top=None
while True:
    print("\nStack Operations")
    print("1. Push")
    print("2. Pop")
    print("3. Peek")
    print("4. Display stack")
    print("5. Exit")
    ch=int(input("Please enter a choice(1-5): "))
    if ch==1:
        item=int(input("\nEnter item: "))
        Push(Stack, item)
    elif ch==2:
        item=Pop(Stack)
        if item=="Underflow":
            print("Underflow! Stack is empty!")
        else:
            print("Popped item is", item)
    elif ch==3:
        item=Peek(Stack)
        if item == "Underflow":
            print("Underflow! Stack is empty!")
        else:
            print("Topmost item is", item)
    elif ch==4:
        Display(Stack)
    elif ch==5:
        break
    else:
        print("Invalid Choice!")
Output:
 Write the output on the left side of your record note using pencil.
Result:
  The above program was executed successfully.
2.Aim:
     To write a python program to implement a push and display operations of stack for the book details(bookno, book name).
Program code:
     Refer textbook pg no=382(q.no 28) and write the program.
Output:
     STACK OPERATIONS
1.	Push
2.	Display stack
3.	Exit
    Enter your choice(1-3): 1
    Enter Book no. to be inserted: 1005
    Enter Book name to be inserted: computer science with python
    Enter your choice(1-3): 2
    [1005,”computer science with python”]  ← top
     Enter your choice(1-3):3
Result:
     The above program was executed successfully.
3. Aim:
        To write a program for creating a table using SQL queries.
   Proram Code:
        CREATE TABLE employees( employee_number int NOT NULL, last_name char(50) NOT
        NULL,first_name char(50) NOT NULL, salary int, dept_id int);

       INSERT INTO employees(employee_number, last_name, first_name, salary, dept_id)
       VALUES(1001, 'Smith', 'John', 62000, 501);

      INSERT INTO employees(employee_number, last_name, first_name, salary, dept_id)
      VALUES(1002, 'Anderson', 'Jane', 57500, 500);

     INSERT INTO employees(employee_number, last_name, first_name, salary, dept_id)
    VALUES(1003, 'Everest', 'Brad', 71000, 500);

    INSERT INTO employees(employee_number, last_name, first_name, salary, dept_id)
    VALUES(1004, 'Horvath', 'Jack', 42000, 501);

   SELECT * FROM employees WHERE salary <= 65500;

  SELECT * FROM employees WHERE first_name LIKE ‘J%’ AND dept_id > 500
  ORDER BY last_name;

   UPDATE employees SET employee_number = 1005 WHERE salary > 65000 
   AND dept_id =500;
    
    SELECT dept_id, SUM(salary) AS total_salaries FROM employees GROUP BY dept_id;
  Output:
 
employee_number	last_name	first_name	salary	dept_id
1001	Smith	John	62000	501
1002	Anderson	Jane	57500	500
1003	Everest	Brad	71000	500
1004	Horvath	Jack	42000	501

employee_number	last_name	first_name	salary	dept_id
1001	Smith	John	62000	501
1002	Anderson	Jane	57500	500
1004	Horvath	Jack	42000	501

employee_number	last_name	first_name	salary	dept_id
1001	Smith	John	62000	501
1004	Horvath	Jack	42000	501


employee_number	last_name	first_name	salary	dept_id
1001	Smith	John	62000	501
1002	Anderson	Jane	57500	500
1005	Everest	Brad	71000	500
1004	Horvath	Jack	42000	501

dept_id	total_salaries
500	119500
501	113000
Result:
     The above program was executed successfully.
4.Aim:
      To write a python program to make database connectivity for executing SQL query.
   Program code:
      import mysql.connector
      mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",
                                                            database="mydatabase")
      mycursor = mydb.cursor()
      mycursor.execute("SELECT * FROM customers")
      myresult = mycursor.fetchall()
      for x in myresult:
            print(x)
    Output:
        (1, 'John', 'Highway 21')
        (2, 'Peter', 'Lowstreet 27')
        (3, 'Amy', 'Apple st 652')
        (4, 'Hannah', 'Mountain 21')
        (5, 'Michael', 'Valley 345')
   Result:
     The above program was executed successfully.

5.Aim:
      To write a python program to make database connectivity for executing SQL query.
   Program code:
      import mysql.connector
      mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",
     database="mydatabase")
     mycursor = mydb.cursor()
     sql = "SELECT * FROM customers WHERE address = %s"
     adr = ("Apple st 652",)
     mycursor.execute(sql, adr)
     myresult = mycursor.fetchall()
     for x in myresult:
           print(x) 
Output:
      (3, 'Amy', 'Apple st 652')
 Result:
     The above program was executed successfully.

6. Aim:
        To write a python program to make database connectivity for executing SQL query.
   Program code:
      import mysql.connector
        mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",database="mydatabase")
        mycursor = mydb.cursor()
         sql = "DELETE FROM customers WHERE address = 'Mountain 21'"
        mycursor.execute(sql)
        mydb.commit()
        print(mycursor.rowcount, "record(s) deleted")

Output:
       1 record(s) deleted
Result:
     The above program was executed successfully.


